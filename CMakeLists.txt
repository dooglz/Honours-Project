#Project root
cmake_minimum_required (VERSION 2.6)
CMAKE_POLICY(SET CMP0012 NEW) 
project (Honours)

if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    MESSAGE( "64 bits compiler detected" )
    SET( EX_PLATFORM 64 )
    SET( EX_PLATFORM_NAME "x64" )
	SET( EX_PLATFORM_NAME_S "64" )
else( CMAKE_SIZEOF_VOID_P EQUAL 8 ) 
    MESSAGE( "32 bits compiler detected" )
    SET( EX_PLATFORM 32 )
    SET( EX_PLATFORM_NAME "x86" )
	SET( EX_PLATFORM_NAME_S "86" )
endif( CMAKE_SIZEOF_VOID_P EQUAL 8 )

SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG 	${CMAKE_BINARY_DIR}/bin_${EX_PLATFORM_NAME_S}_debug)
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin_${EX_PLATFORM_NAME_S}_release)
SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG 	${CMAKE_BINARY_DIR}/lib_${EX_PLATFORM_NAME_S}_debug)
SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib_${EX_PLATFORM_NAME_S}_release)
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG 	${CMAKE_BINARY_DIR}/lib_${EX_PLATFORM_NAME_S}_debug)
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib_${EX_PLATFORM_NAME_S}_release)

find_package(OpenCL)
MESSAGE( "OpenCL_FOUND  ${OpenCL_FOUND}")
MESSAGE( "OpenCL_INCLUDE_DIRS  ${OpenCL_INCLUDE_DIRS}")
MESSAGE( "OpenCL_LIBRARIES  ${OpenCL_LIBRARIES}")
MESSAGE( "OpenCL_VERSION_STRING  ${OpenCL_VERSION_STRING}")
MESSAGE( "OpenCL_VERSION_MAJOR ${OpenCL_VERSION_MAJOR}")
MESSAGE( "OpenCL_VERSION_MINOR  ${OpenCL_VERSION_MINOR}")
MESSAGE( "OpenCL_INCLUDE_DIR  ${OpenCL_INCLUDE_DIR}")
MESSAGE( "OpenCL_LIBRARY ${OpenCL_LIBRARY}")

if(DEFINED ENV{CUDA_PATH})
	MESSAGE( "Cuda Path = $ENV{CUDA_PATH}" )
	SET(CUDA true)
	include_directories ("$ENV{CUDA_PATH}/include")
else(DEFINED ENV{CUDA_PATH}) 
	MESSAGE( "no cuda path" )
	SET(CUDA false)
endif(DEFINED ENV{CUDA_PATH})

add_subdirectory(src)
